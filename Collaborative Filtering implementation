from pyspark.ml.evaluation import RegressionEvaluator
from pyspark.ml.recommendation import ALS

data = spark.read.csv('/FileStore/tables/movielens_ratings.csv',inferSchema=True,header=True)

# Smaller dataset so we will use 0.8 / 0.2
(training, test) = data.randomSplit([0.8, 0.2])

# Build the recommendation model using ALS on the training data
als = ALS(maxIter=5, regParam=0.01, userCol="userId", itemCol="movieId", ratingCol="rating")
model = als.fit(training)

# Evaluate the model by computing the RMSE on the test data
predictions = model.transform(test)

evaluator = RegressionEvaluator(metricName="rmse", labelCol="rating",predictionCol="prediction")
rmse = evaluator.evaluate(predictions)
print("Root-mean-square error = " + str(rmse))

So now that we have the model, how would you actually supply a recommendation to a user?
The same way we did with the test data! For example:

single_user = test.filter(test['userId']==11).select(['movieId','userId']

reccomendations = model.transform(single_user)

reccomendations.orderBy('prediction',ascending=False).show()
